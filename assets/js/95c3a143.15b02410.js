"use strict";(self.webpackChunkcumulus_ui_library=self.webpackChunkcumulus_ui_library||[]).push([[430],{5025:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"knowledge-base/auth-and-permissions","title":"\ud83d\udd10 Auth & Permissions","description":"---","source":"@site/docs/knowledge-base/auth-and-permissions.mdx","sourceDirName":"knowledge-base","slug":"/knowledge-base/auth-and-permissions","permalink":"/cumulus-ui-library/docs/knowledge-base/auth-and-permissions","draft":false,"unlisted":false,"editUrl":"https://github.com/TecDocs/cumulus-ui-library/edit/main/docs/knowledge-base/auth-and-permissions.mdx","tags":[],"version":"current","frontMatter":{"id":"auth-and-permissions","slug":"/knowledge-base/auth-and-permissions","title":"\ud83d\udd10 Auth & Permissions","sidebar_label":"\ud83d\udd10 Auth & Permissions"},"sidebar":"sidebar","previous":{"title":"\ud83d\udcd0 Style Rules","permalink":"/cumulus-ui-library/docs/knowledge-base/style-rules"},"next":{"title":"\ud83d\ude80 Onboarding","permalink":"/cumulus-ui-library/docs/knowledge-base/onboarding"}}');var r=n(4848),t=n(8453),a=n(3820);const o={id:"auth-and-permissions",slug:"/knowledge-base/auth-and-permissions",title:"\ud83d\udd10 Auth & Permissions",sidebar_label:"\ud83d\udd10 Auth & Permissions"},l="\ud83d\udd10 Auth & Permissions",c={},d=[{value:"Role\u2011Based Visibility Matrix",id:"rolebased-visibility-matrix",level:2},{value:"Permission States in Action",id:"permission-states-in-action",level:2},{value:"Toggle\u2011Based Access Control",id:"togglebased-access-control",level:2},{value:"Role Tag Legends",id:"role-tag-legends",level:2},{value:"Flow of Permission Logic",id:"flow-of-permission-logic",level:2},{value:"Locked Feature Callouts",id:"locked-feature-callouts",level:2},{value:"Auditing Access Patterns",id:"auditing-access-patterns",level:2},{value:"Summary",id:"summary",level:2},{value:"What\u2019s Next: Onboarding",id:"whats-next-onboarding",level:2}];function h(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.xc,{children:(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"-auth--permissions",children:"\ud83d\udd10 Auth & Permissions"})})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"design system"})," is more than a visual library. It is a ",(0,r.jsx)(s.strong,{children:"contract"})," between the interface and its intended users.",(0,r.jsx)(s.br,{}),"\n","Color tokens and spacing rules shape aesthetics, but ",(0,r.jsx)(s.strong,{children:"access logic"})," shapes who sees what, who can interact, and under what conditions.",(0,r.jsx)(s.br,{}),"\n","In complex products, this logic cannot remain hidden in the backend; it must be surfaced in the ",(0,r.jsx)(s.strong,{children:"UI itself"}),".",(0,r.jsx)(s.br,{}),"\n","At Cumulus, ",(0,r.jsx)(s.strong,{children:"permission architecture"})," is treated as a ",(0,r.jsx)(s.strong,{children:"first\u2011class design concern"}),"."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["Instead of leaving ",(0,r.jsx)(s.strong,{children:"access control"})," as an invisible backend detail, we embed that logic directly into components.",(0,r.jsx)(s.br,{}),"\n","Whether you are building an admin dashboard or a limited\u2011tier feature, the system ensures that ",(0,r.jsx)(s.strong,{children:"boundaries are visible, predictable"}),", and tied directly to ",(0,r.jsx)(s.strong,{children:"UI states"}),".",(0,r.jsx)(s.br,{}),"\n","The sections below introduce key components that model, enforce, and communicate permission flows clearly."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"rolebased-visibility-matrix",children:"Role\u2011Based Visibility Matrix"}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["The foundation of scalable access control is ",(0,r.jsx)(s.strong,{children:"visibility mapping"}),".",(0,r.jsx)(s.br,{}),"\n","The ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"RoleVisibilityMatrix"})})," provides a single reference of which ",(0,r.jsx)(s.strong,{children:"user roles"})," can access which ",(0,r.jsx)(s.strong,{children:"features"}),", giving product teams a proactive way to plan restrictions.",(0,r.jsx)(s.br,{}),"\n","It replaces scattered permission checks with a ",(0,r.jsx)(s.strong,{children:"centralized, visual map"})," that shows ",(0,r.jsx)(s.strong,{children:"role\u2011to\u2011feature alignment"})," at a glance."]})}),"\n",(0,r.jsx)(a.yq,{}),"\n",(0,r.jsx)(a.gU,{children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Figure 1."})," A visibility matrix showing which roles are granted or restricted from accessing specific interface elements."]})}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["This matrix acts as a ",(0,r.jsx)(s.strong,{children:"single source of truth"}),".",(0,r.jsx)(s.br,{}),"\n","Designers use it for role\u2011accurate wireframes, developers use it to enforce boundaries consistently, and QA uses it to validate gated experiences.",(0,r.jsx)(s.br,{}),"\n","When permissions are clearly documented, assumptions disappear and mismatches between logic and interface become far less likely."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["By exposing access relationships early, the matrix also surfaces ",(0,r.jsx)(s.strong,{children:"over\u2011permissioned roles"}),", unassigned features, and potential compliance risks.",(0,r.jsx)(s.br,{}),"\n","When teams align on access intent, downstream bugs and support tickets drop significantly."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"permission-states-in-action",children:"Permission States in Action"}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["Access control is rarely just \u201con\u201d or \u201coff.\u201d",(0,r.jsx)(s.br,{}),"\n","Between full access and full restriction are nuanced states: ",(0,r.jsx)(s.strong,{children:"read\u2011only modes"}),", ",(0,r.jsx)(s.strong,{children:"disabled controls"}),", ",(0,r.jsx)(s.strong,{children:"locked messages"}),", and ",(0,r.jsx)(s.strong,{children:"upgrade prompts"}),".",(0,r.jsx)(s.br,{}),"\n","The ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"PermissionStatePreview"})})," component visualizes these ",(0,r.jsx)(s.strong,{children:"intermediate tiers"}),", helping designers and developers implement them with clarity."]})}),"\n",(0,r.jsx)(a.t,{}),"\n",(0,r.jsx)(a.gU,{children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Figure 2."})," Components adapting their structure and interactivity based on different permission tiers."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["By rendering permission tiers explicitly, users see ",(0,r.jsx)(s.strong,{children:"why"})," an element is disabled, not just that it is.",(0,r.jsx)(s.br,{}),"\n","This transparency strengthens product communication and prevents frustration from unexplained limitations."]})}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["For developers, this means fewer scattered conditionals and more reliance on ",(0,r.jsx)(s.strong,{children:"standardized, reusable UI states"}),".",(0,r.jsx)(s.br,{}),"\n","Every tier behaves predictably, reducing complexity and making the system more maintainable over time."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"togglebased-access-control",children:"Toggle\u2011Based Access Control"}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["Testing behavior across multiple roles can be time\u2011consuming.",(0,r.jsx)(s.br,{}),"\n","The ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"DynamicAccessToggle"})})," solves this by letting teams simulate roles ",(0,r.jsx)(s.strong,{children:"instantly"}),".",(0,r.jsx)(s.br,{}),"\n","Instead of switching accounts or rebuilding sessions, you can preview how the interface changes as you toggle roles in real time."]})}),"\n",(0,r.jsx)(a.cF,{}),"\n",(0,r.jsx)(a.gU,{children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Figure 3."})," Toggle between user roles to preview access changes live without re\u2011authenticating."]})}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["This component empowers ",(0,r.jsx)(s.strong,{children:"PMs, designers, QA, and engineers"})," to cycle through roles quickly.",(0,r.jsx)(s.br,{}),"\n","It accelerates testing, eliminates guesswork, and makes misconfigurations obvious before release."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["Live toggling also uncovers ",(0,r.jsx)(s.strong,{children:"hidden bugs"})," and layout inconsistencies that might only appear under certain roles.",(0,r.jsx)(s.br,{}),"\n","For new team members, the toggle acts as a ",(0,r.jsx)(s.strong,{children:"learning tool"}),", revealing how permission tiers influence UI behavior."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"role-tag-legends",children:"Role Tag Legends"}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["Visual cues help users understand restrictions without confusion.",(0,r.jsx)(s.br,{}),"\n","The ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"RoleTagLegend"})})," component provides ",(0,r.jsx)(s.strong,{children:"clear tags and tooltips"})," to explain why access is limited.",(0,r.jsx)(s.br,{}),"\n","Instead of assuming a bug, users see context\u2011aware cues that highlight ",(0,r.jsx)(s.strong,{children:"requirements or upgrade paths"}),"."]})}),"\n",(0,r.jsx)(a.gM,{}),"\n",(0,r.jsx)(a.gU,{children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Figure 4."})," Role\u2011based tags and hover explanations clarify access boundaries directly in the UI."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["These tags scale from dashboards to pricing pages and adapt across themes.",(0,r.jsx)(s.br,{}),"\n","They reduce support inquiries, clarify expectations, and maintain user trust."]})}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["Support teams benefit as well, using tags to troubleshoot roles quickly.",(0,r.jsx)(s.br,{}),"\n","For product managers, tags act as visible checkpoints confirming that permissions match intended design."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"flow-of-permission-logic",children:"Flow of Permission Logic"}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["Permissions are not static; they ",(0,r.jsx)(s.strong,{children:"flow through every layer"})," of your stack.",(0,r.jsx)(s.br,{}),"\n","The ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"PermissionFlowCloud"})})," visualizes this pipeline from backend identity stores through to UI components, revealing how roles propagate and are enforced."]})}),"\n",(0,r.jsx)(a.Np,{}),"\n",(0,r.jsx)(a.gU,{children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Figure 5."})," A diagram tracing role\u2011based access from backend to interface, with checkpoints and logic gates."]})}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["This visualization becomes a ",(0,r.jsx)(s.strong,{children:"shared blueprint"})," across teams.",(0,r.jsx)(s.br,{}),"\n","It accelerates debugging, helps explain failures, and improves onboarding by connecting backend logic to visual output."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["Clarity at this level prevents logic drift, improves confidence during refactors, and establishes an ",(0,r.jsx)(s.strong,{children:"auditable access pattern"})," that can evolve safely."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"locked-feature-callouts",children:"Locked Feature Callouts"}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["When a feature is restricted, we do not simply hide it.",(0,r.jsx)(s.br,{}),"\n","The ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"LockedFeatureCallout"})})," component displays a ",(0,r.jsx)(s.strong,{children:"clear, informative barrier"})," that explains what is gated and why, often including links to upgrade plans or access requests."]})}),"\n",(0,r.jsx)(a.dS,{}),"\n",(0,r.jsx)(a.gU,{children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Figure 6."})," Locked callouts give users guidance on how to unlock or request access, improving transparency and trust."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["This clarity transforms frustration into understanding.",(0,r.jsx)(s.br,{}),"\n","Users see that the feature exists, learn why it is unavailable, and know what steps to take next.",(0,r.jsx)(s.br,{}),"\n","Developers benefit too, with less custom logic required to handle restricted states."]})}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsx)(s.p,{children:"Callouts animate smoothly, adapt instantly to role changes, and are ideal for pricing tiers, feature previews, and onboarding journeys."})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"auditing-access-patterns",children:"Auditing Access Patterns"}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["Complex access logic requires ",(0,r.jsx)(s.strong,{children:"accountability"}),".",(0,r.jsx)(s.br,{}),"\n","The ",(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"AccessAuditTrail"})})," component surfaces detailed logs showing who attempted access, when, and with what result.",(0,r.jsx)(s.br,{}),"\n","This is invaluable for testing, compliance, and long\u2011term support."]})}),"\n",(0,r.jsx)(a.oU,{}),"\n",(0,r.jsx)(a.gU,{children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Figure 7."})," A simulated log of permission attempts, showing grants and denials with time stamps and role context."]})}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["During development, audit trails catch edge cases early.",(0,r.jsx)(s.br,{}),"\n","During handoffs, they explain why behaviors occur.",(0,r.jsx)(s.br,{}),"\n","In enterprise settings, they become proof that access logic is applied and enforced consistently."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["Logs can be filtered by role, exported for reviews, and styled to match themes.",(0,r.jsx)(s.br,{}),"\n","This adaptability makes them valuable in both agile teams and highly regulated environments."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["Cumulus treats access control as ",(0,r.jsx)(s.strong,{children:"design infrastructure"}),", not an afterthought.",(0,r.jsx)(s.br,{}),"\n","Every component: tags, matrices, callouts, and toggles, transforms abstract logic into ",(0,r.jsx)(s.strong,{children:"clear, usable communication"}),"."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["By aligning ",(0,r.jsx)(s.strong,{children:"visual patterns with logical rules"}),", we reduce development time, increase product quality, and build ",(0,r.jsx)(s.strong,{children:"lasting user trust"}),".",(0,r.jsx)(s.br,{}),"\n","Permissions are no longer hidden, they are integrated into the design system itself."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"whats-next-onboarding",children:"What\u2019s Next: Onboarding"}),"\n",(0,r.jsx)(a.Nx,{children:(0,r.jsxs)(s.p,{children:["Access control defines what users can do. ",(0,r.jsx)(s.strong,{children:"Onboarding"})," defines what users can understand, learn, and adopt.",(0,r.jsx)(s.br,{}),"\n","The next section explores how Cumulus brings ",(0,r.jsx)(s.strong,{children:"role\u2011aware education"}),", ",(0,r.jsx)(s.strong,{children:"guided component previews"}),", and ",(0,r.jsx)(s.strong,{children:"interactive pathways"})," to accelerate learning and confidence."]})}),"\n",(0,r.jsx)(a.Ow,{children:(0,r.jsxs)(s.p,{children:["Onboarding is the bridge between restriction and mastery.",(0,r.jsx)(s.br,{}),"\n","It shows teams not just what roles exist but how to use them effectively.",(0,r.jsx)(s.br,{}),"\n","Let us move forward into that journey and see how we turn permission logic into actionable guidance."]})})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);